{"ast":null,"code":"'use strict';\n\nconst errCode = require('err-code');\n\nconst CID = require('cids');\n/*\n * Transform one of:\n *\n * ```\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path: CID|String, recursive, metadata }>\n * ```\n *\n * @param input Object\n * @return AsyncIterable<{ path: CID|String, recursive, metadata }>\n */\n\n\nmodule.exports = function normaliseInput(input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`, 'ERR_UNEXPECTED_INPUT'));\n  } // CID|String\n\n\n  if (CID.isCID(input) || input instanceof String || typeof input === 'string') {\n    return async function* () {\n      // eslint-disable-line require-await\n      yield toPin({\n        cid: input\n      });\n    }();\n  } // { cid: CID recursive, metadata }\n\n\n  if (input.cid != null || input.path != null) {\n    return async function* () {\n      // eslint-disable-line require-await\n      yield toPin(input);\n    }();\n  } // Iterable<?>\n\n\n  if (input[Symbol.iterator]) {\n    return async function* () {\n      // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]();\n      const first = iterator.next();\n      if (first.done) return iterator; // Iterable<CID|String>\n\n      if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n        yield toPin({\n          cid: first.value\n        });\n\n        for (const cid of iterator) {\n          yield toPin({\n            cid\n          });\n        }\n\n        return;\n      } // Iterable<{ cid: CID recursive, metadata }>\n\n\n      if (first.value.cid != null || first.value.path != null) {\n        yield toPin(first.value);\n\n        for (const obj of iterator) {\n          yield toPin(obj);\n        }\n\n        return;\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n    }();\n  } // AsyncIterable<?>\n\n\n  if (input[Symbol.asyncIterator]) {\n    return async function* () {\n      const iterator = input[Symbol.asyncIterator]();\n      const first = await iterator.next();\n      if (first.done) return iterator; // AsyncIterable<CID|String>\n\n      if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n        yield toPin({\n          cid: first.value\n        });\n\n        for await (const cid of iterator) {\n          yield toPin({\n            cid\n          });\n        }\n\n        return;\n      } // AsyncIterable<{ cid: CID|String recursive, metadata }>\n\n\n      if (first.value.cid != null || first.value.path != null) {\n        yield toPin(first.value);\n\n        for await (const obj of iterator) {\n          yield toPin(obj);\n        }\n\n        return;\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n    }();\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n};\n\nfunction toPin(input) {\n  const pin = {\n    path: input.cid || input.path,\n    recursive: input.recursive !== false\n  };\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n\n  return pin;\n}","map":{"version":3,"names":["errCode","require","CID","module","exports","normaliseInput","input","undefined","Error","isCID","String","toPin","cid","path","Symbol","iterator","first","next","done","value","obj","asyncIterator","pin","recursive","metadata"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/node_modules/ipfs-core-utils/src/pins/normalise-input.js"],"sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\nconst CID = require('cids')\n\n/*\n * Transform one of:\n *\n * ```\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path: CID|String, recursive, metadata }>\n * ```\n *\n * @param input Object\n * @return AsyncIterable<{ path: CID|String, recursive, metadata }>\n */\nmodule.exports = function normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`, 'ERR_UNEXPECTED_INPUT'))\n  }\n\n  // CID|String\n  if (CID.isCID(input) || input instanceof String || typeof input === 'string') {\n    return (async function * () { // eslint-disable-line require-await\n      yield toPin({ cid: input })\n    })()\n  }\n\n  // { cid: CID recursive, metadata }\n  if (input.cid != null || input.path != null) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toPin(input)\n    })()\n  }\n\n  // Iterable<?>\n  if (input[Symbol.iterator]) {\n    return (async function * () { // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<CID|String>\n      if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n        yield toPin({ cid: first.value })\n        for (const cid of iterator) {\n          yield toPin({ cid })\n        }\n        return\n      }\n\n      // Iterable<{ cid: CID recursive, metadata }>\n      if (first.value.cid != null || first.value.path != null) {\n        yield toPin(first.value)\n        for (const obj of iterator) {\n          yield toPin(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // AsyncIterable<?>\n  if (input[Symbol.asyncIterator]) {\n    return (async function * () {\n      const iterator = input[Symbol.asyncIterator]()\n      const first = await iterator.next()\n      if (first.done) return iterator\n\n      // AsyncIterable<CID|String>\n      if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n        yield toPin({ cid: first.value })\n        for await (const cid of iterator) {\n          yield toPin({ cid })\n        }\n        return\n      }\n\n      // AsyncIterable<{ cid: CID|String recursive, metadata }>\n      if (first.value.cid != null || first.value.path != null) {\n        yield toPin(first.value)\n        for await (const obj of iterator) {\n          yield toPin(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\nfunction toPin (input) {\n  const pin = {\n    path: input.cid || input.path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}