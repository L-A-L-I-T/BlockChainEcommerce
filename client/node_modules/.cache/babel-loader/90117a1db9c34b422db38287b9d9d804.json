{"ast":null,"code":"'use strict';\n\nmodule.exports = function parseMtime(mtime) {\n  if (mtime == null) {\n    return undefined;\n  } // Javascript Date\n\n\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime();\n    const secs = Math.floor(ms / 1000);\n    return {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  } // { secs, nsecs }\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    };\n  } // UnixFS TimeSpec\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    };\n  } // process.hrtime()\n\n\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    };\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n   // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n     return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n\n};","map":{"version":3,"names":["module","exports","parseMtime","mtime","undefined","Date","ms","getTime","secs","Math","floor","nsecs","Object","prototype","hasOwnProperty","call","Seconds","FractionalNanoseconds","Array","isArray"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/node_modules/ipfs-http-client/src/lib/mtime-to-object.js"],"sourcesContent":["'use strict'\n\nmodule.exports = function parseMtime (mtime) {\n  if (mtime == null) {\n    return undefined\n  }\n\n  // Javascript Date\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    return {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  // { secs, nsecs }\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    }\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n\n    return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,KAArB,EAA4B;EAC3C,IAAIA,KAAK,IAAI,IAAb,EAAmB;IACjB,OAAOC,SAAP;EACD,CAH0C,CAK3C;;;EACA,IAAID,KAAK,YAAYE,IAArB,EAA2B;IACzB,MAAMC,EAAE,GAAGH,KAAK,CAACI,OAAN,EAAX;IACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,EAAE,GAAG,IAAhB,CAAb;IAEA,OAAO;MACLE,IAAI,EAAEA,IADD;MAELG,KAAK,EAAE,CAACL,EAAE,GAAIE,IAAI,GAAG,IAAd,IAAuB;IAFzB,CAAP;EAID,CAd0C,CAgB3C;;;EACA,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,KAArC,EAA4C,MAA5C,CAAJ,EAAyD;IACvD,OAAO;MACLK,IAAI,EAAEL,KAAK,CAACK,IADP;MAELG,KAAK,EAAER,KAAK,CAACQ;IAFR,CAAP;EAID,CAtB0C,CAwB3C;;;EACA,IAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,KAArC,EAA4C,SAA5C,CAAJ,EAA4D;IAC1D,OAAO;MACLK,IAAI,EAAEL,KAAK,CAACa,OADP;MAELL,KAAK,EAAER,KAAK,CAACc;IAFR,CAAP;EAID,CA9B0C,CAgC3C;;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAchB,KAAd,CAAJ,EAA0B;IACxB,OAAO;MACLK,IAAI,EAAEL,KAAK,CAAC,CAAD,CADN;MAELQ,KAAK,EAAER,KAAK,CAAC,CAAD;IAFP,CAAP;EAID;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGC,CArDD"},"metadata":{},"sourceType":"script"}