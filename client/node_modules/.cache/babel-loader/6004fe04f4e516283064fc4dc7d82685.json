{"ast":null,"code":"'use strict';\n\nconst modeToString = require('../lib/mode-to-string');\n\nconst mtimeToObject = require('../lib/mtime-to-object');\n\nconst configure = require('../lib/configure');\n\nconst multipartRequest = require('../lib/multipart-request');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst anySignal = require('any-signal');\n\nconst AbortController = require('abort-controller').default;\n\nmodule.exports = configure(api => {\n  return async function (path, input) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // allow aborting requests on body errors\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    const res = await api.post('files/write', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.count || options.length,\n        ...options\n      }),\n      ...(await multipartRequest({\n        content: input,\n        path: 'arg',\n        mode: modeToString(options.mode),\n        mtime: mtimeToObject(options.mtime)\n      }, controller, options.headers))\n    });\n    await res.text();\n  };\n});","map":{"version":3,"names":["modeToString","require","mtimeToObject","configure","multipartRequest","toUrlSearchParams","anySignal","AbortController","default","module","exports","api","path","input","options","controller","signal","res","post","timeout","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","text"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/node_modules/ipfs-http-client/src/files/write.js"],"sourcesContent":["'use strict'\n\nconst modeToString = require('../lib/mode-to-string')\nconst mtimeToObject = require('../lib/mtime-to-object')\nconst configure = require('../lib/configure')\nconst multipartRequest = require('../lib/multipart-request')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller').default\n\nmodule.exports = configure(api => {\n  return async (path, input, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const res = await api.post('files/write', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.count || options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest({\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: mtimeToObject(options.mtime)\n        }, controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,wBAAD,CAA7B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMM,eAAe,GAAGN,OAAO,CAAC,kBAAD,CAAP,CAA4BO,OAApD;;AAEAC,MAAM,CAACC,OAAP,GAAiBP,SAAS,CAACQ,GAAG,IAAI;EAChC,OAAO,gBAAOC,IAAP,EAAaC,KAAb,EAAqC;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IAC1C;IACA,MAAMC,UAAU,GAAG,IAAIR,eAAJ,EAAnB;IACA,MAAMS,MAAM,GAAGV,SAAS,CAAC,CAACS,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAAxB;IAEA,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAJ,CAAS,aAAT,EAAwB;MACxCC,OAAO,EAAEL,OAAO,CAACK,OADuB;MAExCH,MAFwC;MAGxCI,YAAY,EAAEf,iBAAiB,CAAC;QAC9BgB,GAAG,EAAET,IADyB;QAE9BU,cAAc,EAAE,IAFc;QAG9BC,KAAK,EAAET,OAAO,CAACS,KAAR,IAAiBT,OAAO,CAACU,MAHF;QAI9B,GAAGV;MAJ2B,CAAD,CAHS;MASxC,IACE,MAAMV,gBAAgB,CAAC;QACrBqB,OAAO,EAAEZ,KADY;QAErBD,IAAI,EAAE,KAFe;QAGrBc,IAAI,EAAE1B,YAAY,CAACc,OAAO,CAACY,IAAT,CAHG;QAIrBC,KAAK,EAAEzB,aAAa,CAACY,OAAO,CAACa,KAAT;MAJC,CAAD,EAKnBZ,UALmB,EAKPD,OAAO,CAACc,OALD,CADxB;IATwC,CAAxB,CAAlB;IAmBA,MAAMX,GAAG,CAACY,IAAJ,EAAN;EACD,CAzBD;AA0BD,CA3ByB,CAA1B"},"metadata":{},"sourceType":"script"}