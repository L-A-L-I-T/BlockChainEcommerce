{"ast":null,"code":"var _jsxFileName = \"/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Ecommerce from \"../abis/Ecommerce.json\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"../components/Home/Home\";\nimport MyProducts from \"../components/MyProducts/MyProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const [productCount, setProductCount] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [ecommerce, setEcommerce] = useState();\n  const [balance, setBalance] = useState();\n  const [refresh, setRefresh] = useState(false);\n\n  const toggleRefresh = () => setRefresh(!refresh);\n\n  const loadBlockChainData = async () => {\n    setProducts([]);\n\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setAccount(accounts[0]);\n      const networkId = await window.ethereum.request({\n        method: \"net_version\"\n      });\n      let balance = await window.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [accounts[0], \"latest\"]\n      });\n      balance = ethers.utils.formatEther(balance);\n      setBalance(balance);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const networkData = Ecommerce.networks[networkId];\n\n      if (networkData) {\n        await loadContract(signer, networkData);\n      } else {\n        window.alert(\"Ecommerce contract not deployed to detected network\");\n      }\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadContract = async (signer, networkData) => {\n    setLoading(true);\n    const contract = new ethers.Contract(networkData.address, Ecommerce.abi, signer);\n    let temp = await contract.functions.productCount();\n    temp = temp.toString();\n    setProductCount(temp);\n    setEcommerce(contract);\n    setLoading(false);\n  };\n\n  const loadProducts = async () => {\n    console.log(productCount);\n\n    for (var i = 1; i <= productCount; i++) {\n      const product = await (ecommerce === null || ecommerce === void 0 ? void 0 : ecommerce.functions.products(i));\n      setProducts(products => [...products, product]);\n    }\n  };\n\n  useEffect(() => {\n    loadBlockChainData();\n  }, [refresh]);\n  useEffect(() => {\n    setProducts([]);\n    loadProducts();\n  }, [productCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            account: account,\n            productCount: productCount,\n            products: products,\n            loading: loading,\n            ecommerce: ecommerce,\n            balance: balance,\n            refresh: refresh,\n            setLoading: setLoading,\n            toggleRefresh: toggleRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/myproducts\",\n          element: /*#__PURE__*/_jsxDEV(MyProducts, {\n            account: account,\n            products: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Kf/wXnKXGzawrRcuVaJkdmkNRQo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Ecommerce","BrowserRouter","Routes","Route","Home","MyProducts","App","account","setAccount","productCount","setProductCount","products","setProducts","loading","setLoading","ecommerce","setEcommerce","balance","setBalance","refresh","setRefresh","toggleRefresh","loadBlockChainData","window","ethereum","accounts","request","method","networkId","params","utils","formatEther","provider","providers","Web3Provider","signer","getSigner","networkData","networks","loadContract","alert","contract","Contract","address","abi","temp","functions","toString","loadProducts","console","log","i","product"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Ecommerce from \"../abis/Ecommerce.json\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"../components/Home/Home\";\nimport MyProducts from \"../components/MyProducts/MyProducts\";\nfunction App() {\n\tconst [account, setAccount] = useState();\n\tconst [productCount, setProductCount] = useState(0);\n\tconst [products, setProducts] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [ecommerce, setEcommerce] = useState();\n\tconst [balance, setBalance] = useState();\n\tconst [refresh, setRefresh] = useState(false);\n\tconst toggleRefresh = () => setRefresh(!refresh);\n\n\tconst loadBlockChainData = async () => {\n\t\tsetProducts([]);\n\t\tif (window.ethereum) {\n\t\t\tconst accounts = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_requestAccounts\",\n\t\t\t});\n\t\t\tsetAccount(accounts[0]);\n\t\t\tconst networkId = await window.ethereum.request({\n\t\t\t\tmethod: \"net_version\",\n\t\t\t});\n\t\t\tlet balance = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_getBalance\",\n\t\t\t\tparams: [accounts[0], \"latest\"],\n\t\t\t});\n\t\t\tbalance = ethers.utils.formatEther(balance);\n\t\t\tsetBalance(balance);\n\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst networkData = Ecommerce.networks[networkId];\n\t\t\tif (networkData) {\n\t\t\t\tawait loadContract(signer, networkData);\n\t\t\t} else {\n\t\t\t\twindow.alert(\"Ecommerce contract not deployed to detected network\");\n\t\t\t}\n\t\t} else {\n\t\t\twindow.alert(\n\t\t\t\t\"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n\t\t\t);\n\t\t}\n\t};\n\n\tconst loadContract = async (signer, networkData) => {\n\t\tsetLoading(true);\n\t\tconst contract = new ethers.Contract(\n\t\t\tnetworkData.address,\n\t\t\tEcommerce.abi,\n\t\t\tsigner\n\t\t);\n\t\tlet temp = await contract.functions.productCount();\n\t\ttemp = temp.toString();\n\t\tsetProductCount(temp);\n\t\tsetEcommerce(contract);\n\t\tsetLoading(false);\n\t};\n\n\tconst loadProducts = async () => {\n\t\tconsole.log(productCount);\n\t\tfor (var i = 1; i <= productCount; i++) {\n\t\t\tconst product = await ecommerce?.functions.products(i);\n\t\t\tsetProducts((products) => [...products, product]);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tloadBlockChainData();\n\t}, [refresh]);\n\tuseEffect(() => {\n\t\tsetProducts([]);\n\t\tloadProducts();\n\t}, [productCount]);\n\n\treturn (\n\t\t<div>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\taccount={account}\n\t\t\t\t\t\t\t\tproductCount={productCount}\n\t\t\t\t\t\t\t\tproducts={products}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\tecommerce={ecommerce}\n\t\t\t\t\t\t\t\tbalance={balance}\n\t\t\t\t\t\t\t\trefresh={refresh}\n\t\t\t\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\t\t\t\ttoggleRefresh={toggleRefresh}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/myproducts\"\n\t\t\t\t\t\telement={<MyProducts account={account} products={products} />}\n\t\t\t\t\t/>\n\t\t\t\t</Routes>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}