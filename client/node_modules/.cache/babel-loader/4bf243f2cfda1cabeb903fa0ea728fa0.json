{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst toCamelWithMetadata = require('../lib/object-to-camel-with-metadata');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async function (path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (typeof path !== 'string') {\n      options = path || {};\n      path = '/';\n    }\n\n    const res = await api.post('files/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    data.WithLocality = data.WithLocality || false;\n    return toCoreInterface(toCamelWithMetadata(data));\n  };\n});\n\nfunction toCoreInterface(entry) {\n  entry.cid = new CID(entry.hash);\n  delete entry.hash;\n  return entry;\n}","map":{"version":3,"names":["CID","require","toCamelWithMetadata","configure","toUrlSearchParams","module","exports","api","path","options","res","post","timeout","signal","searchParams","arg","headers","data","json","WithLocality","toCoreInterface","entry","cid","hash"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/node_modules/ipfs-http-client/src/files/stat.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst toCamelWithMetadata = require('../lib/object-to-camel-with-metadata')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (path, options = {}) => {\n    if (typeof path !== 'string') {\n      options = path || {}\n      path = '/'\n    }\n\n    const res = await api.post('files/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(toCamelWithMetadata(data))\n  }\n})\n\nfunction toCoreInterface (entry) {\n  entry.cid = new CID(entry.hash)\n  delete entry.hash\n  return entry\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,sCAAD,CAAnC;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;EAChC,OAAO,gBAAOC,IAAP,EAA8B;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;;IACnC,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;MAC5BC,OAAO,GAAGD,IAAI,IAAI,EAAlB;MACAA,IAAI,GAAG,GAAP;IACD;;IAED,MAAME,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;MACvCC,OAAO,EAAEH,OAAO,CAACG,OADsB;MAEvCC,MAAM,EAAEJ,OAAO,CAACI,MAFuB;MAGvCC,YAAY,EAAEV,iBAAiB,CAAC;QAC9BW,GAAG,EAAEP,IADyB;QAE9B,GAAGC;MAF2B,CAAD,CAHQ;MAOvCO,OAAO,EAAEP,OAAO,CAACO;IAPsB,CAAvB,CAAlB;IASA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;IAEAD,IAAI,CAACE,YAAL,GAAoBF,IAAI,CAACE,YAAL,IAAqB,KAAzC;IACA,OAAOC,eAAe,CAAClB,mBAAmB,CAACe,IAAD,CAApB,CAAtB;EACD,CAnBD;AAoBD,CArByB,CAA1B;;AAuBA,SAASG,eAAT,CAA0BC,KAA1B,EAAiC;EAC/BA,KAAK,CAACC,GAAN,GAAY,IAAItB,GAAJ,CAAQqB,KAAK,CAACE,IAAd,CAAZ;EACA,OAAOF,KAAK,CAACE,IAAb;EACA,OAAOF,KAAP;AACD"},"metadata":{},"sourceType":"script"}