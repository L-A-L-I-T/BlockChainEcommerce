{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return async function* ls(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('ls', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path instanceof Uint8Array ? new CID(path) : path}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n\n      result = result[0];\n\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n\n      result = result.Links;\n\n      if (!Array.isArray(result)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n\n      for (const link of result) {\n        const entry = {\n          name: link.Name,\n          path: path + '/' + link.Name,\n          size: link.Size,\n          cid: new CID(link.Hash),\n          type: typeOf(link),\n          depth: link.Depth || 1\n        };\n\n        if (link.Mode) {\n          entry.mode = parseInt(link.Mode, 8);\n        }\n\n        if (link.Mtime !== undefined && link.Mtime !== null) {\n          entry.mtime = {\n            secs: link.Mtime\n          };\n\n          if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n            entry.mtime.nsecs = link.MtimeNsecs;\n          }\n        }\n\n        yield entry;\n      }\n    }\n  };\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'unknown';\n  }\n}","map":{"version":3,"names":["CID","require","configure","toUrlSearchParams","module","exports","api","ls","path","options","res","post","timeout","signal","searchParams","arg","Uint8Array","headers","result","ndjson","Objects","Error","Links","Array","isArray","link","entry","name","Name","size","Size","cid","Hash","type","typeOf","depth","Depth","Mode","mode","parseInt","Mtime","undefined","mtime","secs","MtimeNsecs","nsecs","Type"],"sources":["/Users/lalit/Documents/BlockChain Development/blockchainEcommerce/client/node_modules/ipfs-http-client/src/ls.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * ls (path, options = {}) {\n    const res = await api.post('ls', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path instanceof Uint8Array ? new CID(path) : path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      result = result.Links\n      if (!Array.isArray(result)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      for (const link of result) {\n        const entry = {\n          name: link.Name,\n          path: path + '/' + link.Name,\n          size: link.Size,\n          cid: new CID(link.Hash),\n          type: typeOf(link),\n          depth: link.Depth || 1\n        }\n\n        if (link.Mode) {\n          entry.mode = parseInt(link.Mode, 8)\n        }\n\n        if (link.Mtime !== undefined && link.Mtime !== null) {\n          entry.mtime = {\n            secs: link.Mtime\n          }\n\n          if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n            entry.mtime.nsecs = link.MtimeNsecs\n          }\n        }\n\n        yield entry\n      }\n    }\n  }\n})\n\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'unknown'\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,4BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;EAChC,OAAO,gBAAiBC,EAAjB,CAAqBC,IAArB,EAAyC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC9C,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,IAAT,EAAe;MAC/BC,OAAO,EAAEH,OAAO,CAACG,OADc;MAE/BC,MAAM,EAAEJ,OAAO,CAACI,MAFe;MAG/BC,YAAY,EAAEX,iBAAiB,CAAC;QAC9BY,GAAG,EAAG,GAAEP,IAAI,YAAYQ,UAAhB,GAA6B,IAAIhB,GAAJ,CAAQQ,IAAR,CAA7B,GAA6CA,IAAK,EAD5B;QAE9B,GAAGC;MAF2B,CAAD,CAHA;MAO/BQ,OAAO,EAAER,OAAO,CAACQ;IAPc,CAAf,CAAlB;;IAUA,WAAW,IAAIC,MAAf,IAAyBR,GAAG,CAACS,MAAJ,EAAzB,EAAuC;MACrCD,MAAM,GAAGA,MAAM,CAACE,OAAhB;;MAEA,IAAI,CAACF,MAAL,EAAa;QACX,MAAM,IAAIG,KAAJ,CAAU,8BAAV,CAAN;MACD;;MAEDH,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;;MACA,IAAI,CAACA,MAAL,EAAa;QACX,MAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;MACD;;MAEDH,MAAM,GAAGA,MAAM,CAACI,KAAhB;;MACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAL,EAA4B;QAC1B,MAAM,IAAIG,KAAJ,CAAU,gDAAV,CAAN;MACD;;MAED,KAAK,MAAMI,IAAX,IAAmBP,MAAnB,EAA2B;QACzB,MAAMQ,KAAK,GAAG;UACZC,IAAI,EAAEF,IAAI,CAACG,IADC;UAEZpB,IAAI,EAAEA,IAAI,GAAG,GAAP,GAAaiB,IAAI,CAACG,IAFZ;UAGZC,IAAI,EAAEJ,IAAI,CAACK,IAHC;UAIZC,GAAG,EAAE,IAAI/B,GAAJ,CAAQyB,IAAI,CAACO,IAAb,CAJO;UAKZC,IAAI,EAAEC,MAAM,CAACT,IAAD,CALA;UAMZU,KAAK,EAAEV,IAAI,CAACW,KAAL,IAAc;QANT,CAAd;;QASA,IAAIX,IAAI,CAACY,IAAT,EAAe;UACbX,KAAK,CAACY,IAAN,GAAaC,QAAQ,CAACd,IAAI,CAACY,IAAN,EAAY,CAAZ,CAArB;QACD;;QAED,IAAIZ,IAAI,CAACe,KAAL,KAAeC,SAAf,IAA4BhB,IAAI,CAACe,KAAL,KAAe,IAA/C,EAAqD;UACnDd,KAAK,CAACgB,KAAN,GAAc;YACZC,IAAI,EAAElB,IAAI,CAACe;UADC,CAAd;;UAIA,IAAIf,IAAI,CAACmB,UAAL,KAAoBH,SAApB,IAAiChB,IAAI,CAACmB,UAAL,KAAoB,IAAzD,EAA+D;YAC7DlB,KAAK,CAACgB,KAAN,CAAYG,KAAZ,GAAoBpB,IAAI,CAACmB,UAAzB;UACD;QACF;;QAED,MAAMlB,KAAN;MACD;IACF;EACF,CAvDD;AAwDD,CAzDyB,CAA1B;;AA2DA,SAASQ,MAAT,CAAiBT,IAAjB,EAAuB;EACrB,QAAQA,IAAI,CAACqB,IAAb;IACE,KAAK,CAAL;IACA,KAAK,CAAL;MACE,OAAO,KAAP;;IACF,KAAK,CAAL;MACE,OAAO,MAAP;;IACF;MACE,OAAO,SAAP;EAPJ;AASD"},"metadata":{},"sourceType":"script"}